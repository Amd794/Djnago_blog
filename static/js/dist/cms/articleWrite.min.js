function Article(){this.progressGroup=$("#progress-group")}Article.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},Article.prototype.listenUploadFielEvent=function(){var i=$("#thumbnail-btn");i.change(function(){var e=i[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},Article.prototype.listenQiniuUploadFileEvent=function(){var a=this;$("#thumbnail-btn").change(function(){var n=this.files[0];console.log(n),xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,i=(new Date).getTime()+"."+n.name.split(".")[1],o={fname:i,params:{},mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},r={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(n,i,t,o,r).subscribe({next:a.handleFileUploadProgress,error:a.handleFileUploadError,complete:a.handleFileUploadComplete})}}})})},Article.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";Article.progressGroup.show();var i=$(".progress-bar");i.css({width:t}),i.text(t)},Article.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},Article.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="https://image.amd794.com/"+e.key;$("input[name='picture']").val(t)},Article.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-article-id"),i=$("input[name='title']").val(),o=$("select[name='category']").val(),r=$("input[name='imagelabels']").val(),n=$("input[name='digest']").val(),a=$("input[name='picture']").val(),l=window.ue.getContent();""===r&&(r=!1);var s="";s=t?"/cms/edit_article/":"/cms/write_article/",xfzajax.post({url:s,data:{title:i,category:o,digest:n,picture:a,tag:r,content:l,pk:t},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！文章发表成功！",function(){window.location.reload()})}})})},Article.prototype.run=function(){var e=this;e.initUEditor(),e.listenQiniuUploadFileEvent(),e.listenSubmitEvent()},$(function(){(new Article).run(),Article.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
