function ArticleTag(){}ArticleTag.prototype.run=function(){var t=this;t.listenAddTagEvent(),t.listenEditTagEvent(),t.listenDeleteTagEvent()},ArticleTag.prototype.listenAddTagEvent=function(){$("#add-btn").click(function(){xfzalert.alertOneInput({title:"添加文章标签",placeholder:"请输入文章标签",confirmCallback:function(t){xfzajax.post({url:"/cms/add_article_tag/",data:{name:t},success:function(t){200===t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})},ArticleTag.prototype.listenEditTagEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),a=t.attr("data-name");xfzalert.alertOneInput({title:"修改标签名称",placeholder:"请输入新的标签名称",value:a,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_article_tag/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},ArticleTag.prototype.listenDeleteTagEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"您确定要删除这个标签吗？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_article_tag/",data:{pk:t},success:function(t){200===t.code&&window.location.reload()}})}})})},$(function(){(new ArticleTag).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy9hcnRpY2xlVGFnLmpzIl0sIm5hbWVzIjpbIkFydGljbGVUYWciLCJwcm90b3R5cGUiLCJydW4iLCJzZWxmIiwidGhpcyIsImxpc3RlbkFkZFRhZ0V2ZW50IiwibGlzdGVuRWRpdFRhZ0V2ZW50IiwibGlzdGVuRGVsZXRlVGFnRXZlbnQiLCIkIiwiY2xpY2siLCJ4ZnphbGVydCIsImFsZXJ0T25lSW5wdXQiLCJ0aXRsZSIsInBsYWNlaG9sZGVyIiwiY29uZmlybUNhbGxiYWNrIiwiaW5wdVZhbHVlIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwibmFtZSIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwid2luZG93IiwibG9jYXRpb24iLCJyZWxvYWQiLCJjbG9zZSIsInRyIiwicGFyZW50IiwicGsiLCJhdHRyIiwidmFsdWUiLCJpbnB1dFZhbHVlIiwiYWxlcnRDb25maXJtIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxjQUlUQSxXQUFXQyxVQUFVQyxJQUFNLFdBQ3ZCLElBQUlDLEVBQU9DLEtBQ1hELEVBQUtFLG9CQUNMRixFQUFLRyxxQkFDTEgsRUFBS0ksd0JBR1RQLFdBQVdDLFVBQVVJLGtCQUFvQixXQUN4QkcsRUFBRSxZQUNSQyxNQUFNLFdBQ1RDLFNBQVNDLGNBQWMsQ0FDbkJDLE1BQVMsU0FDVEMsWUFBZSxVQUNmQyxnQkFBbUIsU0FBVUMsR0FDekJDLFFBQVFDLEtBQUssQ0FDVEMsSUFBTyx3QkFDUEMsS0FBUSxDQUNKQyxLQUFRTCxHQUVaTSxRQUFXLFNBQVVDLEdBQ00sTUFBbkJBLEVBQWEsTUFDYkMsUUFBUUMsSUFBSUYsR0FDWkcsT0FBT0MsU0FBU0MsVUFFaEJqQixTQUFTa0IsaUJBU3JDNUIsV0FBV0MsVUFBVUssbUJBQXFCLFdBRXhCRSxFQUFFLGFBQ1JDLE1BQU0sV0FDVixJQUNJb0IsRUFEYXJCLEVBQUVKLE1BQ0MwQixTQUFTQSxTQUN6QkMsRUFBS0YsRUFBR0csS0FBSyxXQUNiWixFQUFPUyxFQUFHRyxLQUFLLGFBQ25CdEIsU0FBU0MsY0FBYyxDQUNuQkMsTUFBUyxTQUNUQyxZQUFlLFlBQ2ZvQixNQUFTYixFQUNUTixnQkFBbUIsU0FBVW9CLEdBQ3pCbEIsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLHlCQUNQQyxLQUFRLENBQ0pZLEdBQU1BLEVBQ05YLEtBQVFjLEdBRVpiLFFBQVcsU0FBVUMsR0FDTSxNQUFuQkEsRUFBYSxLQUNiRyxPQUFPQyxTQUFTQyxTQUVoQmpCLFNBQVNrQixpQkFTckM1QixXQUFXQyxVQUFVTSxxQkFBdUIsV0FDeEJDLEVBQUUsZUFDUkMsTUFBTSxXQUNaLElBRUlzQixFQUZhdkIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ2pCRSxLQUFLLFdBQ2pCdEIsU0FBU3lCLGFBQWEsQ0FDbEJ2QixNQUFTLGVBQ1RFLGdCQUFtQixXQUNmRSxRQUFRQyxLQUFLLENBQ1RDLElBQU8sMkJBQ1BDLEtBQVEsQ0FDSlksR0FBTUEsR0FFVlYsUUFBVyxTQUFVQyxHQUNNLE1BQW5CQSxFQUFhLE1BQ2JHLE9BQU9DLFNBQVNDLGtCQVU1Q25CLEVBQUUsWUFDWSxJQUFJUixZQUNWRSIsImZpbGUiOiJjbXMvYXJ0aWNsZVRhZy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBBcnRpY2xlVGFnKCkge1xyXG5cclxufVxyXG5cclxuQXJ0aWNsZVRhZy5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgc2VsZi5saXN0ZW5BZGRUYWdFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5FZGl0VGFnRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuRGVsZXRlVGFnRXZlbnQoKTtcclxufTtcclxuXHJcbkFydGljbGVUYWcucHJvdG90eXBlLmxpc3RlbkFkZFRhZ0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGFkZEJ0biA9ICQoJyNhZGQtYnRuJyk7XHJcbiAgICBhZGRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHhmemFsZXJ0LmFsZXJ0T25lSW5wdXQoe1xyXG4gICAgICAgICAgICAndGl0bGUnOiAn5re75Yqg5paH56ug5qCH562+JyxcclxuICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzogJ+ivt+i+k+WFpeaWh+eroOagh+etvicsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOiBmdW5jdGlvbiAoaW5wdVZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2Ntcy9hZGRfYXJ0aWNsZV90YWcvJyxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBpbnB1VmFsdWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5BcnRpY2xlVGFnLnByb3RvdHlwZS5saXN0ZW5FZGl0VGFnRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgZWRpdEJ0biA9ICQoXCIuZWRpdC1idG5cIik7XHJcbiAgICBlZGl0QnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudEJ0biA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICB2YXIgcGsgPSB0ci5hdHRyKCdkYXRhLXBrJyk7XHJcbiAgICAgICAgdmFyIG5hbWUgPSB0ci5hdHRyKCdkYXRhLW5hbWUnKTtcclxuICAgICAgICB4ZnphbGVydC5hbGVydE9uZUlucHV0KHtcclxuICAgICAgICAgICAgJ3RpdGxlJzogJ+S/ruaUueagh+etvuWQjeensCcsXHJcbiAgICAgICAgICAgICdwbGFjZWhvbGRlcic6ICfor7fovpPlhaXmlrDnmoTmoIfnrb7lkI3np7AnLFxyXG4gICAgICAgICAgICAndmFsdWUnOiBuYW1lLFxyXG4gICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKGlucHV0VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3VybCc6ICcvY21zL2VkaXRfYXJ0aWNsZV90YWcvJyxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ3BrJzogcGssXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJzogaW5wdXRWYWx1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuQXJ0aWNsZVRhZy5wcm90b3R5cGUubGlzdGVuRGVsZXRlVGFnRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZGVsZXRlQnRuID0gJChcIi5kZWxldGUtYnRuXCIpO1xyXG4gICAgZGVsZXRlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudEJ0biA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICB2YXIgcGsgPSB0ci5hdHRyKCdkYXRhLXBrJyk7XHJcbiAgICAgICAgeGZ6YWxlcnQuYWxlcnRDb25maXJtKHtcclxuICAgICAgICAgICAgJ3RpdGxlJzogJ+aCqOehruWumuimgeWIoOmZpOi/meS4quagh+etvuWQl++8nycsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2Ntcy9kZWxldGVfYXJ0aWNsZV90YWcvJyxcclxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ3BrJzogcGtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHRhZyA9IG5ldyBBcnRpY2xlVGFnKCk7XHJcbiAgICB0YWcucnVuKCk7XHJcbn0pOyJdfQ==
