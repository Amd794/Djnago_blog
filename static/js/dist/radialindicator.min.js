!function(n,t,i){"use strict";var k=2*Math.PI,F=Math.PI/2;function N(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(t,e,n,i){return e+e+n+n+i+i});var e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:null}function P(t,e,n,i){return Math.round(n+(i-n)*t/e)}function r(t,e){e=function(){for(var t=arguments,e=t[0],n=1,i=t.length;n<i;n++){var r=t[n];for(var a in r)r.hasOwnProperty(a)&&(e[a]=r[a])}return e}({},a.defaults,e=e||{}),this.indOption=e,"string"==typeof t&&(t=i.querySelector(t)),t.length&&(t=t[0]),this.container=t;var n=i.createElement("canvas");t.appendChild(n),this.canElm=n,this.ctx=n.getContext("2d"),this.current_value=e.initValue||e.minValue||0}function a(t,e){var n=new r(t,e);return n.init(),n}a.defaults={radius:50,barWidth:5,barBgColor:"#eeeeee",barColor:"#99CC33",format:null,frameTime:10,frameNum:null,fontColor:null,fontFamily:null,fontWeight:"bold",fontSize:null,interpolate:!0,percentage:!(r.prototype={constructor:a,init:function(){var t=this.indOption,e=this.canElm,n=this.ctx,i=2*(t.radius+t.barWidth),r=i/2;return this.formatter="function"==typeof t.format?t.format:function(o){return function(t){if(!o)return t.toString();for(var e=(t=t||0).toString().split("").reverse(),n=o.split("").reverse(),i=0,r=0,a=n.length;i<a&&e.length;i++)"#"==n[i]&&(n[r=i]=e.shift());return n.splice(r+1,n.lastIndexOf("#")-r,e.reverse().join("")),n.reverse().join("")}}(t.format),this.maxLength=t.percentage?4:this.formatter(t.maxValue).length,e.width=i,e.height=i,n.strokeStyle=t.barBgColor,n.lineWidth=t.barWidth,n.beginPath(),n.arc(r,r,t.radius,0,2*Math.PI),n.stroke(),this.imgData=n.getImageData(0,0,i,i),this.value(this.current_value),this},value:function(t){if(void 0===t||isNaN(t))return this.current_value;t=parseInt(t);var e=this.ctx,n=this.indOption,i=n.barColor,r=2*(n.radius+n.barWidth),a=n.minValue,o=n.maxValue,u=r/2;t=t<a?a:o<t?o:t;var l,s,h,f,c,d,m,v,p,g=Math.round(100*(t-a)/(o-a)*100)/100,x=n.percentage?g+"%":this.formatter(t);if(this.current_value=t,e.putImageData(this.imgData,0,0),"object"==typeof i)for(var b=Object.keys(i),I=1,y=b.length;I<y;I++){var C=b[I-1],O=b[I],V=i[C],S=i[O],W=t==C?V:t==O?S:C<t&&t<O&&(n.interpolate?(l=t,s=C,h=O,f=V,void 0,d=-1!=(c=S).indexOf("#")?N(c):c.match(/\d+/g),m=-1!=f.indexOf("#")?N(f):f.match(/\d+/g),v=h-s,p=l-s,d&&m?"rgb("+P(p,v,m[0],d[0])+","+P(p,v,m[1],d[1])+","+P(p,v,m[2],d[2])+")":null):S);if(0!=W){i=W;break}}if(e.strokeStyle=i,n.roundCorner&&(e.lineCap="round"),e.beginPath(),e.arc(u,u,n.radius,-F,k*g/100-F,!1),e.stroke(),n.displayNumber){var w=e.font.split(" "),M=n.fontWeight,_=n.fontSize||r/(this.maxLength-(Math.floor(1.4*this.maxLength/4)-1));w=n.fontFamily||w[w.length-1],e.fillStyle=n.fontColor||i,e.font=M+" "+_+"px "+w,e.textAlign="center",e.textBaseline="middle",e.fillText(x,u,u)}return this},animate:function(t){var e=this.indOption,n=this.current_value||e.minValue,i=this,r=Math.ceil((e.maxValue-e.minValue)/(e.frameNum||(e.percentage?100:500))),a=t<n;return this.intvFunc&&clearInterval(this.intvFunc),this.intvFunc=setInterval(function(){if(!a&&t<=n||a&&n<=t){if(i.current_value==n)return void clearInterval(i.intvFunc);n=t}i.value(n),n!=t&&(n+=a?-r:r)},e.frameTime),this},option:function(t,e){if(void 0===e)return this.option[t];-1!=["radius","barWidth","barBgColor","format","maxValue","percentage"].indexOf(t)&&(this.indOption[t]=e,this.init().value(this.current_value)),this.indOption[t]=e}}),displayNumber:!0,roundCorner:!1,minValue:0,maxValue:100,initValue:0},t.radialIndicator=a,n&&(n.fn.radialIndicator=function(e){return this.each(function(){var t=a(this,e);n.data(this,"radialIndicator",t)})})}(window.jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
